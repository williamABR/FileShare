{"ast":null,"code":"'use strict';\n\nconst monthNamesConversion = require('./month-names-conversion');\n\nconst weekDayNamesConversion = require('./week-day-names-conversion');\n\nconst convertAsterisksToRanges = require('./asterisk-to-range-conversion');\n\nconst convertRanges = require('./range-conversion');\n\nconst convertSteps = require('./step-values-conversion');\n\nmodule.exports = (() => {\n  function appendSeccondExpression(expressions) {\n    if (expressions.length === 5) {\n      return ['0'].concat(expressions);\n    }\n\n    return expressions;\n  }\n\n  function removeSpaces(str) {\n    return str.replace(/\\s{2,}/g, ' ').trim();\n  } // Function that takes care of normalization.\n\n\n  function normalizeIntegers(expressions) {\n    for (let i = 0; i < expressions.length; i++) {\n      const numbers = expressions[i].split(',');\n\n      for (let j = 0; j < numbers.length; j++) {\n        numbers[j] = parseInt(numbers[j]);\n      }\n\n      expressions[i] = numbers;\n    }\n\n    return expressions;\n  }\n  /*\n  * The node-cron core allows only numbers (including multiple numbers e.g 1,2).\n  * This module is going to translate the month names, week day names and ranges\n  * to integers relatives.\n  *\n  * Month names example:\n  *  - expression 0 1 1 January,Sep *\n  *  - Will be translated to 0 1 1 1,9 *\n  *\n  * Week day names example:\n  *  - expression 0 1 1 2 Monday,Sat\n  *  - Will be translated to 0 1 1 1,5 *\n  *\n  * Ranges example:\n  *  - expression 1-5 * * * *\n  *  - Will be translated to 1,2,3,4,5 * * * *\n  */\n\n\n  function interprete(expression) {\n    let expressions = removeSpaces(expression).split(' ');\n    expressions = appendSeccondExpression(expressions);\n    expressions[4] = monthNamesConversion(expressions[4]);\n    expressions[5] = weekDayNamesConversion(expressions[5]);\n    expressions = convertAsterisksToRanges(expressions);\n    expressions = convertRanges(expressions);\n    expressions = convertSteps(expressions);\n    expressions = normalizeIntegers(expressions);\n    return expressions.join(' ');\n  }\n\n  return interprete;\n})();","map":{"version":3,"names":["monthNamesConversion","require","weekDayNamesConversion","convertAsterisksToRanges","convertRanges","convertSteps","module","exports","appendSeccondExpression","expressions","length","concat","removeSpaces","str","replace","trim","normalizeIntegers","i","numbers","split","j","parseInt","interprete","expression","join"],"sources":["/Users/williambaquero/Documents/Go/Front/front/node_modules/node-cron/src/convert-expression/index.js"],"sourcesContent":["'use strict';\n\nconst monthNamesConversion = require('./month-names-conversion');\nconst weekDayNamesConversion = require('./week-day-names-conversion');\nconst convertAsterisksToRanges = require('./asterisk-to-range-conversion');\nconst convertRanges = require('./range-conversion');\nconst convertSteps = require('./step-values-conversion');\n\nmodule.exports = (() => {\n\n    function appendSeccondExpression(expressions){\n        if(expressions.length === 5){\n            return ['0'].concat(expressions);\n        }\n        return expressions;\n    }\n\n    function removeSpaces(str) {\n        return str.replace(/\\s{2,}/g, ' ').trim();\n    }\n\n    // Function that takes care of normalization.\n    function normalizeIntegers(expressions) {\n        for (let i=0; i < expressions.length; i++){\n            const numbers = expressions[i].split(',');\n            for (let j=0; j<numbers.length; j++){\n                numbers[j] = parseInt(numbers[j]);\n            }\n            expressions[i] = numbers;\n        }\n        return expressions;\n    }\n\n    /*\n   * The node-cron core allows only numbers (including multiple numbers e.g 1,2).\n   * This module is going to translate the month names, week day names and ranges\n   * to integers relatives.\n   *\n   * Month names example:\n   *  - expression 0 1 1 January,Sep *\n   *  - Will be translated to 0 1 1 1,9 *\n   *\n   * Week day names example:\n   *  - expression 0 1 1 2 Monday,Sat\n   *  - Will be translated to 0 1 1 1,5 *\n   *\n   * Ranges example:\n   *  - expression 1-5 * * * *\n   *  - Will be translated to 1,2,3,4,5 * * * *\n   */\n    function interprete(expression){\n        let expressions = removeSpaces(expression).split(' ');\n        expressions = appendSeccondExpression(expressions);\n        expressions[4] = monthNamesConversion(expressions[4]);\n        expressions[5] = weekDayNamesConversion(expressions[5]);\n        expressions = convertAsterisksToRanges(expressions);\n        expressions = convertRanges(expressions);\n        expressions = convertSteps(expressions);\n\n        expressions = normalizeIntegers(expressions);\n\n        return expressions.join(' ');\n    }\n\n    return interprete;\n})();\n"],"mappings":"AAAA;;AAEA,MAAMA,oBAAoB,GAAGC,OAAO,CAAC,0BAAD,CAApC;;AACA,MAAMC,sBAAsB,GAAGD,OAAO,CAAC,6BAAD,CAAtC;;AACA,MAAME,wBAAwB,GAAGF,OAAO,CAAC,gCAAD,CAAxC;;AACA,MAAMG,aAAa,GAAGH,OAAO,CAAC,oBAAD,CAA7B;;AACA,MAAMI,YAAY,GAAGJ,OAAO,CAAC,0BAAD,CAA5B;;AAEAK,MAAM,CAACC,OAAP,GAAiB,CAAC,MAAM;EAEpB,SAASC,uBAAT,CAAiCC,WAAjC,EAA6C;IACzC,IAAGA,WAAW,CAACC,MAAZ,KAAuB,CAA1B,EAA4B;MACxB,OAAO,CAAC,GAAD,EAAMC,MAAN,CAAaF,WAAb,CAAP;IACH;;IACD,OAAOA,WAAP;EACH;;EAED,SAASG,YAAT,CAAsBC,GAAtB,EAA2B;IACvB,OAAOA,GAAG,CAACC,OAAJ,CAAY,SAAZ,EAAuB,GAAvB,EAA4BC,IAA5B,EAAP;EACH,CAXmB,CAapB;;;EACA,SAASC,iBAAT,CAA2BP,WAA3B,EAAwC;IACpC,KAAK,IAAIQ,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAGR,WAAW,CAACC,MAA9B,EAAsCO,CAAC,EAAvC,EAA0C;MACtC,MAAMC,OAAO,GAAGT,WAAW,CAACQ,CAAD,CAAX,CAAeE,KAAf,CAAqB,GAArB,CAAhB;;MACA,KAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACF,OAAO,CAACR,MAAxB,EAAgCU,CAAC,EAAjC,EAAoC;QAChCF,OAAO,CAACE,CAAD,CAAP,GAAaC,QAAQ,CAACH,OAAO,CAACE,CAAD,CAAR,CAArB;MACH;;MACDX,WAAW,CAACQ,CAAD,CAAX,GAAiBC,OAAjB;IACH;;IACD,OAAOT,WAAP;EACH;EAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACI,SAASa,UAAT,CAAoBC,UAApB,EAA+B;IAC3B,IAAId,WAAW,GAAGG,YAAY,CAACW,UAAD,CAAZ,CAAyBJ,KAAzB,CAA+B,GAA/B,CAAlB;IACAV,WAAW,GAAGD,uBAAuB,CAACC,WAAD,CAArC;IACAA,WAAW,CAAC,CAAD,CAAX,GAAiBT,oBAAoB,CAACS,WAAW,CAAC,CAAD,CAAZ,CAArC;IACAA,WAAW,CAAC,CAAD,CAAX,GAAiBP,sBAAsB,CAACO,WAAW,CAAC,CAAD,CAAZ,CAAvC;IACAA,WAAW,GAAGN,wBAAwB,CAACM,WAAD,CAAtC;IACAA,WAAW,GAAGL,aAAa,CAACK,WAAD,CAA3B;IACAA,WAAW,GAAGJ,YAAY,CAACI,WAAD,CAA1B;IAEAA,WAAW,GAAGO,iBAAiB,CAACP,WAAD,CAA/B;IAEA,OAAOA,WAAW,CAACe,IAAZ,CAAiB,GAAjB,CAAP;EACH;;EAED,OAAOF,UAAP;AACH,CAzDgB,GAAjB"},"metadata":{},"sourceType":"script"}