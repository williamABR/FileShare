{"ast":null,"code":"'use strict';\n\nconst EventEmitter = require('events');\n\nconst TimeMatcher = require('./time-matcher');\n\nclass Scheduler extends EventEmitter {\n  constructor(pattern, timezone, autorecover) {\n    super();\n    this.timeMatcher = new TimeMatcher(pattern, timezone);\n    this.autorecover = autorecover;\n  }\n\n  start() {\n    // clear timeout if exists\n    this.stop();\n    let lastCheck = process.hrtime();\n    let lastExecution = this.timeMatcher.apply(new Date());\n\n    const matchTime = () => {\n      const delay = 1000;\n      const elapsedTime = process.hrtime(lastCheck);\n      const elapsedMs = (elapsedTime[0] * 1e9 + elapsedTime[1]) / 1e6;\n      const missedExecutions = Math.floor(elapsedMs / 1000);\n\n      for (let i = missedExecutions; i >= 0; i--) {\n        const date = new Date(new Date().getTime() - i * 1000);\n        let date_tmp = this.timeMatcher.apply(date);\n\n        if (lastExecution.getTime() < date_tmp.getTime() && (i === 0 || this.autorecover) && this.timeMatcher.match(date)) {\n          this.emit('scheduled-time-matched', date_tmp);\n          date_tmp.setMilliseconds(0);\n          lastExecution = date_tmp;\n        }\n      }\n\n      lastCheck = process.hrtime();\n      this.timeout = setTimeout(matchTime, delay);\n    };\n\n    matchTime();\n  }\n\n  stop() {\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n    }\n\n    this.timeout = null;\n  }\n\n}\n\nmodule.exports = Scheduler;","map":{"version":3,"names":["EventEmitter","require","TimeMatcher","Scheduler","constructor","pattern","timezone","autorecover","timeMatcher","start","stop","lastCheck","process","hrtime","lastExecution","apply","Date","matchTime","delay","elapsedTime","elapsedMs","missedExecutions","Math","floor","i","date","getTime","date_tmp","match","emit","setMilliseconds","timeout","setTimeout","clearTimeout","module","exports"],"sources":["/Users/williambaquero/Documents/Go/Front/front/node_modules/node-cron/src/scheduler.js"],"sourcesContent":["'use strict';\n\nconst EventEmitter = require('events');\nconst TimeMatcher = require('./time-matcher');\n\nclass Scheduler extends EventEmitter{\n    constructor(pattern, timezone, autorecover){\n        super();\n        this.timeMatcher = new TimeMatcher(pattern, timezone);\n        this.autorecover = autorecover;\n    }\n\n    start(){\n        // clear timeout if exists\n        this.stop();\n\n        let lastCheck = process.hrtime();\n        let lastExecution = this.timeMatcher.apply(new Date());\n\n        const matchTime = () => {\n            const delay = 1000;\n            const elapsedTime = process.hrtime(lastCheck);\n            const elapsedMs = (elapsedTime[0] * 1e9 + elapsedTime[1]) / 1e6;\n            const missedExecutions = Math.floor(elapsedMs / 1000);\n            \n            for(let i = missedExecutions; i >= 0; i--){\n                const date = new Date(new Date().getTime() - i * 1000);\n                let date_tmp = this.timeMatcher.apply(date);\n                if(lastExecution.getTime() < date_tmp.getTime() && (i === 0 || this.autorecover) && this.timeMatcher.match(date)){\n                    this.emit('scheduled-time-matched', date_tmp);\n                    date_tmp.setMilliseconds(0);\n                    lastExecution = date_tmp;\n                }\n            }\n            lastCheck = process.hrtime();\n            this.timeout = setTimeout(matchTime, delay);\n        };\n        matchTime();\n    }\n\n    stop(){\n        if(this.timeout){\n            clearTimeout(this.timeout);\n        }\n        this.timeout = null;\n    }\n}\n\nmodule.exports = Scheduler;\n"],"mappings":"AAAA;;AAEA,MAAMA,YAAY,GAAGC,OAAO,CAAC,QAAD,CAA5B;;AACA,MAAMC,WAAW,GAAGD,OAAO,CAAC,gBAAD,CAA3B;;AAEA,MAAME,SAAN,SAAwBH,YAAxB,CAAoC;EAChCI,WAAW,CAACC,OAAD,EAAUC,QAAV,EAAoBC,WAApB,EAAgC;IACvC;IACA,KAAKC,WAAL,GAAmB,IAAIN,WAAJ,CAAgBG,OAAhB,EAAyBC,QAAzB,CAAnB;IACA,KAAKC,WAAL,GAAmBA,WAAnB;EACH;;EAEDE,KAAK,GAAE;IACH;IACA,KAAKC,IAAL;IAEA,IAAIC,SAAS,GAAGC,OAAO,CAACC,MAAR,EAAhB;IACA,IAAIC,aAAa,GAAG,KAAKN,WAAL,CAAiBO,KAAjB,CAAuB,IAAIC,IAAJ,EAAvB,CAApB;;IAEA,MAAMC,SAAS,GAAG,MAAM;MACpB,MAAMC,KAAK,GAAG,IAAd;MACA,MAAMC,WAAW,GAAGP,OAAO,CAACC,MAAR,CAAeF,SAAf,CAApB;MACA,MAAMS,SAAS,GAAG,CAACD,WAAW,CAAC,CAAD,CAAX,GAAiB,GAAjB,GAAuBA,WAAW,CAAC,CAAD,CAAnC,IAA0C,GAA5D;MACA,MAAME,gBAAgB,GAAGC,IAAI,CAACC,KAAL,CAAWH,SAAS,GAAG,IAAvB,CAAzB;;MAEA,KAAI,IAAII,CAAC,GAAGH,gBAAZ,EAA8BG,CAAC,IAAI,CAAnC,EAAsCA,CAAC,EAAvC,EAA0C;QACtC,MAAMC,IAAI,GAAG,IAAIT,IAAJ,CAAS,IAAIA,IAAJ,GAAWU,OAAX,KAAuBF,CAAC,GAAG,IAApC,CAAb;QACA,IAAIG,QAAQ,GAAG,KAAKnB,WAAL,CAAiBO,KAAjB,CAAuBU,IAAvB,CAAf;;QACA,IAAGX,aAAa,CAACY,OAAd,KAA0BC,QAAQ,CAACD,OAAT,EAA1B,KAAiDF,CAAC,KAAK,CAAN,IAAW,KAAKjB,WAAjE,KAAiF,KAAKC,WAAL,CAAiBoB,KAAjB,CAAuBH,IAAvB,CAApF,EAAiH;UAC7G,KAAKI,IAAL,CAAU,wBAAV,EAAoCF,QAApC;UACAA,QAAQ,CAACG,eAAT,CAAyB,CAAzB;UACAhB,aAAa,GAAGa,QAAhB;QACH;MACJ;;MACDhB,SAAS,GAAGC,OAAO,CAACC,MAAR,EAAZ;MACA,KAAKkB,OAAL,GAAeC,UAAU,CAACf,SAAD,EAAYC,KAAZ,CAAzB;IACH,CAjBD;;IAkBAD,SAAS;EACZ;;EAEDP,IAAI,GAAE;IACF,IAAG,KAAKqB,OAAR,EAAgB;MACZE,YAAY,CAAC,KAAKF,OAAN,CAAZ;IACH;;IACD,KAAKA,OAAL,GAAe,IAAf;EACH;;AAxC+B;;AA2CpCG,MAAM,CAACC,OAAP,GAAiBhC,SAAjB"},"metadata":{},"sourceType":"script"}