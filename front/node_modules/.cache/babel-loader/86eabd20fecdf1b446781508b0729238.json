{"ast":null,"code":"'use strict';\n\nconst EventEmitter = require('events');\n\nconst Task = require('./task');\n\nconst Scheduler = require('./scheduler');\n\nconst uuid = require('uuid');\n\nclass ScheduledTask extends EventEmitter {\n  constructor(cronExpression, func, options) {\n    super();\n\n    if (!options) {\n      options = {\n        scheduled: true,\n        recoverMissedExecutions: false\n      };\n    }\n\n    this.options = options;\n    this.options.name = this.options.name || uuid.v4();\n    this._task = new Task(func);\n    this._scheduler = new Scheduler(cronExpression, options.timezone, options.recoverMissedExecutions);\n\n    this._scheduler.on('scheduled-time-matched', now => {\n      this.now(now);\n    });\n\n    if (options.scheduled !== false) {\n      this._scheduler.start();\n    }\n\n    if (options.runOnInit === true) {\n      this.now('init');\n    }\n  }\n\n  now(now = 'manual') {\n    let result = this._task.execute(now);\n\n    this.emit('task-done', result);\n  }\n\n  start() {\n    this._scheduler.start();\n  }\n\n  stop() {\n    this._scheduler.stop();\n  }\n\n}\n\nmodule.exports = ScheduledTask;","map":{"version":3,"names":["EventEmitter","require","Task","Scheduler","uuid","ScheduledTask","constructor","cronExpression","func","options","scheduled","recoverMissedExecutions","name","v4","_task","_scheduler","timezone","on","now","start","runOnInit","result","execute","emit","stop","module","exports"],"sources":["/Users/williambaquero/Documents/Go/Front/front/node_modules/node-cron/src/scheduled-task.js"],"sourcesContent":["'use strict';\n\nconst EventEmitter = require('events');\nconst Task = require('./task');\nconst Scheduler = require('./scheduler');\nconst uuid = require('uuid');\n\nclass ScheduledTask extends EventEmitter {\n    constructor(cronExpression, func, options) {\n        super();\n        if(!options){\n            options = {\n                scheduled: true,\n                recoverMissedExecutions: false\n            };\n        }\n      \n        this.options = options;\n        this.options.name = this.options.name || uuid.v4();\n\n        this._task = new Task(func);\n        this._scheduler = new Scheduler(cronExpression, options.timezone, options.recoverMissedExecutions);\n\n        this._scheduler.on('scheduled-time-matched', (now) => {\n            this.now(now);\n        });\n\n        if(options.scheduled !== false){\n            this._scheduler.start();\n        }\n        \n        if(options.runOnInit === true){\n            this.now('init');\n        }\n    }\n    \n    now(now = 'manual') {\n        let result = this._task.execute(now);\n        this.emit('task-done', result);\n    }\n    \n    start() {\n        this._scheduler.start();  \n    }\n    \n    stop() {\n        this._scheduler.stop();\n    }\n}\n\nmodule.exports = ScheduledTask;\n"],"mappings":"AAAA;;AAEA,MAAMA,YAAY,GAAGC,OAAO,CAAC,QAAD,CAA5B;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,QAAD,CAApB;;AACA,MAAME,SAAS,GAAGF,OAAO,CAAC,aAAD,CAAzB;;AACA,MAAMG,IAAI,GAAGH,OAAO,CAAC,MAAD,CAApB;;AAEA,MAAMI,aAAN,SAA4BL,YAA5B,CAAyC;EACrCM,WAAW,CAACC,cAAD,EAAiBC,IAAjB,EAAuBC,OAAvB,EAAgC;IACvC;;IACA,IAAG,CAACA,OAAJ,EAAY;MACRA,OAAO,GAAG;QACNC,SAAS,EAAE,IADL;QAENC,uBAAuB,EAAE;MAFnB,CAAV;IAIH;;IAED,KAAKF,OAAL,GAAeA,OAAf;IACA,KAAKA,OAAL,CAAaG,IAAb,GAAoB,KAAKH,OAAL,CAAaG,IAAb,IAAqBR,IAAI,CAACS,EAAL,EAAzC;IAEA,KAAKC,KAAL,GAAa,IAAIZ,IAAJ,CAASM,IAAT,CAAb;IACA,KAAKO,UAAL,GAAkB,IAAIZ,SAAJ,CAAcI,cAAd,EAA8BE,OAAO,CAACO,QAAtC,EAAgDP,OAAO,CAACE,uBAAxD,CAAlB;;IAEA,KAAKI,UAAL,CAAgBE,EAAhB,CAAmB,wBAAnB,EAA8CC,GAAD,IAAS;MAClD,KAAKA,GAAL,CAASA,GAAT;IACH,CAFD;;IAIA,IAAGT,OAAO,CAACC,SAAR,KAAsB,KAAzB,EAA+B;MAC3B,KAAKK,UAAL,CAAgBI,KAAhB;IACH;;IAED,IAAGV,OAAO,CAACW,SAAR,KAAsB,IAAzB,EAA8B;MAC1B,KAAKF,GAAL,CAAS,MAAT;IACH;EACJ;;EAEDA,GAAG,CAACA,GAAG,GAAG,QAAP,EAAiB;IAChB,IAAIG,MAAM,GAAG,KAAKP,KAAL,CAAWQ,OAAX,CAAmBJ,GAAnB,CAAb;;IACA,KAAKK,IAAL,CAAU,WAAV,EAAuBF,MAAvB;EACH;;EAEDF,KAAK,GAAG;IACJ,KAAKJ,UAAL,CAAgBI,KAAhB;EACH;;EAEDK,IAAI,GAAG;IACH,KAAKT,UAAL,CAAgBS,IAAhB;EACH;;AAxCoC;;AA2CzCC,MAAM,CAACC,OAAP,GAAiBrB,aAAjB"},"metadata":{},"sourceType":"script"}